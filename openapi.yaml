openapi: 3.0.0
info:
  title: 記帳(TODO)
  version: v0.0.1
tags:
  - name: User
  - name: Account
  - name: Category
  - name: Shop
  - name: Fee
  - name: Daily Item
  - name: Repeating Item
paths:
  /log-in:
    post:
      summary: user logs in
      tags: ["User"]
      operationId: LogIn
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                password:
                  type: string
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
  /log-out:
    post:
      summary: user logs out
      tags: ["User"]
      operationId: LogOut
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
  /sign-up:
    post:
      summary: user signs up
      tags: ["User"]
      operationId: SignUp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                password:
                  type: string
              required:
                - id
                - password
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
  /{user-id}/config:
    parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
    put:
      summary: update user config
      tags: ["User"]
      operationId: UpdateUserConfig
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                compare_items_in_different_shop:
                  type: boolean
                compare_items_in_same_shop:
                  type: boolean
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
  /{user-id}/accounts:
    parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
    post:
      summary: create an account for user
      tags: ["Account"]
      operationId: CreateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
  /{user-id}/accounts/{account-id}:
    parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      - name: account-id
        in: path
        required: true
        schema:
          type: integer
    put:
      summary: update account
      tags: ["Account"]
      operationId: UpdateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
    delete:
      summary: delete account
      tags: ["Account"]
      operationId: DeleteAccount
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
  /{user-id}/categories:
    parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
    post:
      summary: create category
      tags: ["Category"]
      operationId: CreateCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
  /{user-id}/categories/{category-id}:
    parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      - name: category-id
        in: path
        required: true
        schema:
          type: integer
    put:
      summary: update category
      tags: ["Category"]
      operationId: UpdateCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
    delete:
      summary: delete category
      tags: ["Category"]
      operationId: DeleteCategory
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
  /{user-id}/shops:
    parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
    post:
      tags: ["Shop"]
      operationId: CreateShop
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Shop"
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
  /{user-id}/shops/{shop-id}:
    parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      - name: shop-id
        in: path
        required: true
        schema:
          type: integer
    put:
      tags: ["Shop"]
      operationId: UpdateShop
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Shop"
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
    delete:
      tags: ["Shop"]
      operationId: DeleteShop
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
  /{user-id}/fees:
    parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
    post:
      tags: ["Fee"]
      operationId: CreateFee
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Fee"
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
  /{user-id}/fees/{fee-id}:
    parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      - name: fee-id
        in: path
        required: true
        schema:
          type: integer
    put:
      tags: ["Fee"]
      operationId: UpdateFee
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Fee"
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
    delete:
      tags: ["Fee"]
      operationId: DeleteFee
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
  /{user-id}/items:
    parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
    post:
      tags: ["Daily Item"]
      operationId: CreateDailyItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DailyItem"
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
    get:
      tags: ["Daily Item"]
      operationId: ListDailyItems
      parameters:
        - name: date
          in: query
          description: today is in default
          schema:
            type: string
            format: date
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DailyItem"
  /{user-id}/items/{item-id}:
    parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      - name: item-id
        in: path
        required: true
        schema:
          type: integer
    put:
      tags: ["Daily Item"]
      operationId: UpdateDailyItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DailyItem"
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
    delete:
      tags: ["Daily Item"]
      operationId: DeleteDailyItem
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
  /{user-id}/items/export:
    parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
    get:
      tags: ["Daily Item"]
      operationId: ExportDailyItems
      parameters:
        - name: format
          in: query
          schema:
            type: string
            enum:
              - json
              - xml
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DailyItem"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DailyItem"
                xml:
                  name: items
                  wrapped: true
  /{user-id}/items/import:
    parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
    post:
      tags: ["Daily Item"]
      operationId: ImportDailyItems
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/DailyItem"
          application/xml:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/DailyItem"
              xml:
                name: items
                wrapped: true
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
  /{user-id}/repeating-items:
    parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
    post:
      tags: ["Repeating Item"]
      operationId: CreateRepeatingItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepeatingItem"
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
  /{user-id}/repeating-items/{repeating-item-id}:
    parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      - name: repeating-item-id
        in: path
        required: true
        schema:
          type: integer
    put:
      tags: ["Repeating Item"]
      operationId: UpdateRepeatingItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepeatingItem"
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
    delete:
      tags: ["Repeating Item"]
      operationId: DeleteRepeatingItem
      responses:
        default:
          $ref: "#/components/responses/DefaultResponse"
components:
  schemas:
    Account:
      type: object
      properties:
        name:
          type: string
          description: account name
        icon:
          type: integer
          description: icon id
        initial_balance:
          type: number
      required:
        - name
    CategoryType:
      type: string
      enum: ["expense", "income"]
    Category:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/CategoryType"
        name:
          type: string
        icon:
          type: integer
          description: icon id
      required:
        - type
        - name
    Shop:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
      required:
        - name
    Fee:
      type: object
      properties:
        name:
          type: string
        value:
          type: object
          description: choose one of properties
          properties:
            rate:
              type: number
            fixed:
              type: number
    Item:
      type: object
      properties:
        name:
          type: string
        category:
          type: array
          items:
            type: integer
            xml:
              name: category
          minLength: 1
          xml:
            name: categories
            attribute: false
            wrapped: true
        shop:
          type: integer
        quantity:
          type: object
          properties:
            value:
              type: number
        fee:
          type: integer
        price:
          type: number
        memo:
          type: string
      required:
        - name
        - price
    DailyItem:
      allOf:
        - type: object
          properties:
            date:
              type: string
              format: date
          required:
            - date
        - $ref: "#/components/schemas/Item"
      xml:
        name: item
    RepeatingItem:
      type: object
      properties:
        item:
          $ref: "#/components/schemas/Item"
        valid:
          type: object
          properties:
            start:
              type: string
              format: date
            end:
              type: string
              format: date
        frequency:
          type: object
          properties:
            durations:
              type: array
              items:
                type: object
                properties:
                  value:
                    type: integer
                  unit:
                    type: string
                    enum:
                      - ONE_DAY
                      - ONE_MONTH
                      - ONE_YEAR
                      - EVERY_WORK_DAY
                required:
                  - value
                  - unit
      required:
        - item
        - frequency
  responses:
    DefaultResponse:
      description: TODO
